{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductTypeService = /*#__PURE__*/(() => {\n  class ProductTypeService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.appBaseUrl = environment.apiUrl;\n    }\n    // Get product types\n    getAllAsync() {\n      const getAllAsyncUrl = `${this.appBaseUrl}productType/getAll`;\n      let getProductTypes = this.httpClient.get(getAllAsyncUrl);\n      return getProductTypes;\n    }\n    // Get product type by id\n    getByIdAsync(id) {\n      const getByIdAsyncUrl = `${this.appBaseUrl}productType/getById/${id}`;\n      let getProductType = this.httpClient.get(getByIdAsyncUrl);\n      return getProductType;\n    }\n    // Create product type\n    createAsync(createModel) {\n      const createAsyncUrl = `${this.appBaseUrl}productType/create`;\n      let createProductType = this.httpClient.post(createAsyncUrl, createModel);\n      return createProductType;\n    }\n    // Update product type\n    updateAsync(id, updateModel) {\n      const updateAsyncUrl = `${this.appBaseUrl}productType/update/${id}`;\n      let updateProductType = this.httpClient.put(updateAsyncUrl, updateModel);\n      return updateProductType;\n    }\n    // Delete product type by id\n    deleteAsync(id) {\n      const deleteAsyncUrl = `${this.appBaseUrl}productType/delete/${id}`;\n      let deleteProductType = this.httpClient.delete(deleteAsyncUrl);\n      return deleteProductType;\n    }\n    static {\n      this.ɵfac = function ProductTypeService_Factory(t) {\n        return new (t || ProductTypeService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProductTypeService,\n        factory: ProductTypeService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProductTypeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}