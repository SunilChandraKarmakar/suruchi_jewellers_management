{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.appBaseUrl = environment.apiUrl;\n    }\n    // Get products\n    getAllAsync() {\n      const getAllAsyncUrl = `${this.appBaseUrl}product/getAll`;\n      let getProducts = this.httpClient.get(getAllAsyncUrl);\n      return getProducts;\n    }\n    // Get product by id\n    getByIdAsync(id) {\n      const getByIdAsyncUrl = `${this.appBaseUrl}product/getById/${id}`;\n      let getProduct = this.httpClient.get(getByIdAsyncUrl);\n      return getProduct;\n    }\n    // Create product\n    createAsync(createModel) {\n      const createAsyncUrl = `${this.appBaseUrl}product/create`;\n      let createProduct = this.httpClient.post(createAsyncUrl, createModel);\n      return createProduct;\n    }\n    // Update product\n    updateAsync(id, updateModel) {\n      const updateAsyncUrl = `${this.appBaseUrl}product/update/${id}`;\n      let updateProduct = this.httpClient.put(updateAsyncUrl, updateModel);\n      return updateProduct;\n    }\n    // Delete product by id\n    deleteAsync(id) {\n      const deleteAsyncUrl = `${this.appBaseUrl}product/delete/${id}`;\n      let deleteProduct = this.httpClient.delete(deleteAsyncUrl);\n      return deleteProduct;\n    }\n    static {\n      this.ɵfac = function ProductService_Factory(t) {\n        return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProductService,\n        factory: ProductService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}