{"ast":null,"code":"import { PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, RendererFactory2, Injectable, Optional, Inject, Self, Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_ICONS_USED_BY_ZORRO = [BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, StarFill, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_ICONS = new InjectionToken('nz_icons');\nconst NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nconst DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\nlet NzIconService = /*#__PURE__*/(() => {\n  class NzIconService extends IconService {\n    constructor(rendererFactory, sanitizer, nzConfigService, handler, _document, icons) {\n      super(rendererFactory, handler, _document, sanitizer);\n      this.nzConfigService = nzConfigService;\n      this.configUpdated$ = new Subject();\n      this.iconfontCache = new Set();\n      this.onConfigChange();\n      this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(icons || []));\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n    }\n    normalizeSvgElement(svg) {\n      if (!svg.getAttribute('viewBox')) {\n        this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n      }\n      if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n        this._renderer.setAttribute(svg, 'width', '1em');\n        this._renderer.setAttribute(svg, 'height', '1em');\n      }\n      if (!svg.getAttribute('fill')) {\n        this._renderer.setAttribute(svg, 'fill', 'currentColor');\n      }\n    }\n    fetchFromIconfont(opt) {\n      const {\n        scriptUrl\n      } = opt;\n      if (this._document && !this.iconfontCache.has(scriptUrl)) {\n        const script = this._renderer.createElement('script');\n        this._renderer.setAttribute(script, 'src', scriptUrl);\n        this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n        this._renderer.appendChild(this._document.body, script);\n        this.iconfontCache.add(scriptUrl);\n      }\n    }\n    createIconfontIcon(type) {\n      return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n    }\n    onConfigChange() {\n      this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n        this.configDefaultTwotoneColor();\n        this.configDefaultTheme();\n        this.configUpdated$.next();\n      });\n    }\n    configDefaultTheme() {\n      const iconConfig = this.getConfig();\n      this.defaultTheme = iconConfig.nzTheme || 'outline';\n    }\n    configDefaultTwotoneColor() {\n      const iconConfig = this.getConfig();\n      const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n      let primaryColor = DEFAULT_TWOTONE_COLOR;\n      if (defaultTwotoneColor) {\n        if (defaultTwotoneColor.startsWith('#')) {\n          primaryColor = defaultTwotoneColor;\n        } else {\n          warn('Twotone color must be a hex color!');\n        }\n      }\n      this.twoToneColor = {\n        primaryColor\n      };\n    }\n    getConfig() {\n      return this.nzConfigService.getConfigForComponent('icon') || {};\n    }\n  }\n  NzIconService.ɵprov = ɵɵdefineInjectable({\n    factory: function NzIconService_Factory() {\n      return new NzIconService(ɵɵinject(RendererFactory2), ɵɵinject(DomSanitizer), ɵɵinject(NzConfigService), ɵɵinject(HttpBackend, 8), ɵɵinject(DOCUMENT, 8), ɵɵinject(NZ_ICONS, 8));\n    },\n    token: NzIconService,\n    providedIn: \"root\"\n  });\n  return NzIconService;\n})();\nconst NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\nclass NzIconPatchService {\n  constructor(extraIcons, rootIconService) {\n    this.extraIcons = extraIcons;\n    this.rootIconService = rootIconService;\n    this.patched = false;\n  }\n  doPatch() {\n    if (this.patched) {\n      return;\n    }\n    this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n    this.patched = true;\n  }\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzIconDirective = /*#__PURE__*/(() => {\n  class NzIconDirective extends IconDirective {\n    constructor(elementRef, iconService, renderer, iconPatch) {\n      super(iconService, elementRef, renderer);\n      this.iconService = iconService;\n      this.renderer = renderer;\n      this.cacheClassName = null;\n      this.nzRotate = 0;\n      this.spin = false;\n      if (iconPatch) {\n        iconPatch.doPatch();\n      }\n      this.el = elementRef.nativeElement;\n    }\n    set nzSpin(value) {\n      this.spin = value;\n    }\n    set nzType(value) {\n      this.type = value;\n    }\n    set nzTheme(value) {\n      this.theme = value;\n    }\n    set nzTwotoneColor(value) {\n      this.twoToneColor = value;\n    }\n    set nzIconfont(value) {\n      this.iconfont = value;\n    }\n    ngOnChanges(changes) {\n      const {\n        nzType,\n        nzTwotoneColor,\n        nzSpin,\n        nzTheme,\n        nzRotate\n      } = changes;\n      if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n        this.changeIcon2();\n      } else if (nzRotate) {\n        this.handleRotate(this.el.firstChild);\n      } else {\n        this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n      }\n    }\n    ngOnInit() {\n      this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n    }\n    /**\n     * If custom content is provided, try to normalize SVG elements.\n     */\n    ngAfterContentChecked() {\n      if (!this.type) {\n        const children = this.el.children;\n        let length = children.length;\n        if (!this.type && children.length) {\n          while (length--) {\n            const child = children[length];\n            if (child.tagName.toLowerCase() === 'svg') {\n              this.iconService.normalizeSvgElement(child);\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Replacement of `changeIcon` for more modifications.\n     */\n    changeIcon2() {\n      this.setClassName();\n      this._changeIcon().then(svgOrRemove => {\n        if (svgOrRemove) {\n          this.setSVGData(svgOrRemove);\n          this.handleSpin(svgOrRemove);\n          this.handleRotate(svgOrRemove);\n        }\n      });\n    }\n    handleSpin(svg) {\n      if (this.spin || this.type === 'loading') {\n        this.renderer.addClass(svg, 'anticon-spin');\n      } else {\n        this.renderer.removeClass(svg, 'anticon-spin');\n      }\n    }\n    handleRotate(svg) {\n      if (this.nzRotate) {\n        this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n      } else {\n        this.renderer.removeAttribute(svg, 'style');\n      }\n    }\n    setClassName() {\n      if (this.cacheClassName) {\n        this.renderer.removeClass(this.el, this.cacheClassName);\n      }\n      this.cacheClassName = `anticon-${this.type}`;\n      this.renderer.addClass(this.el, this.cacheClassName);\n    }\n    setSVGData(svg) {\n      this.renderer.setAttribute(svg, 'data-icon', this.type);\n      this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n  }\n  __decorate([InputBoolean(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], NzIconDirective.prototype, \"nzSpin\", null);\n\n  /**\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n   */\n  return NzIconDirective;\n})();\nclass NzIconModule {\n  static forRoot(icons) {\n    return {\n      ngModule: NzIconModule,\n      providers: [{\n        provide: NZ_ICONS,\n        useValue: icons\n      }]\n    };\n  }\n  static forChild(icons) {\n    return {\n      ngModule: NzIconModule,\n      providers: [NzIconPatchService, {\n        provide: NZ_ICONS_PATCH,\n        useValue: icons\n      }]\n    };\n  }\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService };\n//# sourceMappingURL=ng-zorro-antd-icon.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}