{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Optional, ElementRef, Output, Input, Renderer2, ViewChild, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { gridResponsiveMap, NzBreakpointEnum, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean, InputNumber, toNumber } from 'ng-zorro-antd/core/util';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_CONFIG_MODULE_NAME = 'pagination';\nlet NzPaginationComponent = /*#__PURE__*/(() => {\n  class NzPaginationComponent {\n    constructor(i18n, cdr, breakpointService, nzConfigService, directionality, elementRef) {\n      this.i18n = i18n;\n      this.cdr = cdr;\n      this.breakpointService = breakpointService;\n      this.nzConfigService = nzConfigService;\n      this.directionality = directionality;\n      this.elementRef = elementRef;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzPageSizeChange = new EventEmitter();\n      this.nzPageIndexChange = new EventEmitter();\n      this.nzShowTotal = null;\n      this.nzItemRender = null;\n      this.nzSize = 'default';\n      this.nzPageSizeOptions = [10, 20, 30, 40];\n      this.nzShowSizeChanger = false;\n      this.nzShowQuickJumper = false;\n      this.nzSimple = false;\n      this.nzDisabled = false;\n      this.nzResponsive = false;\n      this.nzHideOnSinglePage = false;\n      this.nzTotal = 0;\n      this.nzPageIndex = 1;\n      this.nzPageSize = 10;\n      this.showPagination = true;\n      this.size = 'default';\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n      this.total$ = new ReplaySubject(1);\n      // TODO: move to host after View Engine deprecation\n      this.elementRef.nativeElement.classList.add('ant-pagination');\n    }\n    validatePageIndex(value, lastIndex) {\n      if (value > lastIndex) {\n        return lastIndex;\n      } else if (value < 1) {\n        return 1;\n      } else {\n        return value;\n      }\n    }\n    onPageIndexChange(index) {\n      const lastIndex = this.getLastIndex(this.nzTotal, this.nzPageSize);\n      const validIndex = this.validatePageIndex(index, lastIndex);\n      if (validIndex !== this.nzPageIndex && !this.nzDisabled) {\n        this.nzPageIndex = validIndex;\n        this.nzPageIndexChange.emit(this.nzPageIndex);\n      }\n    }\n    onPageSizeChange(size) {\n      this.nzPageSize = size;\n      this.nzPageSizeChange.emit(size);\n      const lastIndex = this.getLastIndex(this.nzTotal, this.nzPageSize);\n      if (this.nzPageIndex > lastIndex) {\n        this.onPageIndexChange(lastIndex);\n      }\n    }\n    onTotalChange(total) {\n      const lastIndex = this.getLastIndex(total, this.nzPageSize);\n      if (this.nzPageIndex > lastIndex) {\n        Promise.resolve().then(() => this.onPageIndexChange(lastIndex));\n      }\n    }\n    getLastIndex(total, pageSize) {\n      return Math.ceil(total / pageSize);\n    }\n    ngOnInit() {\n      var _a;\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.locale = this.i18n.getLocaleData('Pagination');\n        this.cdr.markForCheck();\n      });\n      this.total$.pipe(takeUntil(this.destroy$)).subscribe(total => {\n        this.onTotalChange(total);\n      });\n      this.breakpointService.subscribe(gridResponsiveMap).pipe(takeUntil(this.destroy$)).subscribe(bp => {\n        if (this.nzResponsive) {\n          this.size = bp === NzBreakpointEnum.xs ? 'small' : 'default';\n          this.cdr.markForCheck();\n        }\n      });\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    ngOnChanges(changes) {\n      const {\n        nzHideOnSinglePage,\n        nzTotal,\n        nzPageSize,\n        nzSize\n      } = changes;\n      if (nzTotal) {\n        this.total$.next(this.nzTotal);\n      }\n      if (nzHideOnSinglePage || nzTotal || nzPageSize) {\n        this.showPagination = this.nzHideOnSinglePage && this.nzTotal > this.nzPageSize || this.nzTotal > 0 && !this.nzHideOnSinglePage;\n      }\n      if (nzSize) {\n        this.size = nzSize.currentValue;\n      }\n    }\n  }\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzPaginationComponent.prototype, \"nzSize\", void 0);\n  __decorate([WithConfig(), __metadata(\"design:type\", Array)], NzPaginationComponent.prototype, \"nzPageSizeOptions\", void 0);\n  __decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzShowSizeChanger\", void 0);\n  __decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzShowQuickJumper\", void 0);\n  __decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzSimple\", void 0);\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzDisabled\", void 0);\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzResponsive\", void 0);\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzHideOnSinglePage\", void 0);\n  __decorate([InputNumber(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzTotal\", void 0);\n  __decorate([InputNumber(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzPageIndex\", void 0);\n  __decorate([InputNumber(), __metadata(\"design:type\", Object)], NzPaginationComponent.prototype, \"nzPageSize\", void 0);\n\n  /**\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n   */\n  return NzPaginationComponent;\n})();\nclass NzPaginationDefaultComponent {\n  constructor(cdr, renderer, elementRef, directionality) {\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.nzSize = 'default';\n    this.itemRender = null;\n    this.showTotal = null;\n    this.disabled = false;\n    this.showSizeChanger = false;\n    this.showQuickJumper = false;\n    this.total = 0;\n    this.pageIndex = 1;\n    this.pageSize = 10;\n    this.pageSizeOptions = [10, 20, 30, 40];\n    this.pageIndexChange = new EventEmitter();\n    this.pageSizeChange = new EventEmitter();\n    this.ranges = [0, 0];\n    this.listOfPageItem = [];\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    renderer.removeChild(renderer.parentNode(elementRef.nativeElement), elementRef.nativeElement);\n  }\n  ngOnInit() {\n    var _a;\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.updateRtlStyle();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.updateRtlStyle();\n  }\n  updateRtlStyle() {\n    if (this.dir === 'rtl') {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-pagination-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-pagination-rtl');\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  jumpPage(index) {\n    this.onPageIndexChange(index);\n  }\n  jumpDiff(diff) {\n    this.jumpPage(this.pageIndex + diff);\n  }\n  trackByPageItem(_, value) {\n    return `${value.type}-${value.index}`;\n  }\n  onPageIndexChange(index) {\n    this.pageIndexChange.next(index);\n  }\n  onPageSizeChange(size) {\n    this.pageSizeChange.next(size);\n  }\n  getLastIndex(total, pageSize) {\n    return Math.ceil(total / pageSize);\n  }\n  buildIndexes() {\n    const lastIndex = this.getLastIndex(this.total, this.pageSize);\n    this.listOfPageItem = this.getListOfPageItem(this.pageIndex, lastIndex);\n  }\n  getListOfPageItem(pageIndex, lastIndex) {\n    const concatWithPrevNext = listOfPage => {\n      const prevItem = {\n        type: 'prev',\n        disabled: pageIndex === 1\n      };\n      const nextItem = {\n        type: 'next',\n        disabled: pageIndex === lastIndex\n      };\n      return [prevItem, ...listOfPage, nextItem];\n    };\n    const generatePage = (start, end) => {\n      const list = [];\n      for (let i = start; i <= end; i++) {\n        list.push({\n          index: i,\n          type: 'page'\n        });\n      }\n      return list;\n    };\n    if (lastIndex <= 9) {\n      return concatWithPrevNext(generatePage(1, lastIndex));\n    } else {\n      const generateRangeItem = (selected, last) => {\n        let listOfRange = [];\n        const prevFiveItem = {\n          type: 'prev_5'\n        };\n        const nextFiveItem = {\n          type: 'next_5'\n        };\n        const firstPageItem = generatePage(1, 1);\n        const lastPageItem = generatePage(lastIndex, lastIndex);\n        if (selected < 4) {\n          listOfRange = [...generatePage(2, 5), nextFiveItem];\n        } else if (selected < last - 3) {\n          listOfRange = [prevFiveItem, ...generatePage(selected - 2, selected + 2), nextFiveItem];\n        } else {\n          listOfRange = [prevFiveItem, ...generatePage(last - 4, last - 1)];\n        }\n        return [...firstPageItem, ...listOfRange, ...lastPageItem];\n      };\n      return concatWithPrevNext(generateRangeItem(pageIndex, lastIndex));\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      pageIndex,\n      pageSize,\n      total\n    } = changes;\n    if (pageIndex || pageSize || total) {\n      this.ranges = [(this.pageIndex - 1) * this.pageSize + 1, Math.min(this.pageIndex * this.pageSize, this.total)];\n      this.buildIndexes();\n    }\n  }\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPaginationItemComponent {\n  constructor() {\n    this.active = false;\n    this.index = null;\n    this.disabled = false;\n    this.direction = 'ltr';\n    this.type = null;\n    this.itemRender = null;\n    this.diffIndex = new EventEmitter();\n    this.gotoIndex = new EventEmitter();\n    this.title = null;\n  }\n  clickItem() {\n    if (!this.disabled) {\n      if (this.type === 'page') {\n        this.gotoIndex.emit(this.index);\n      } else {\n        this.diffIndex.emit({\n          next: 1,\n          prev: -1,\n          prev_5: -5,\n          next_5: 5\n        }[this.type]);\n      }\n    }\n  }\n  ngOnChanges(changes) {\n    var _a, _b, _c, _d;\n    const {\n      locale,\n      index,\n      type\n    } = changes;\n    if (locale || index || type) {\n      this.title = {\n        page: `${this.index}`,\n        next: (_a = this.locale) === null || _a === void 0 ? void 0 : _a.next_page,\n        prev: (_b = this.locale) === null || _b === void 0 ? void 0 : _b.prev_page,\n        prev_5: (_c = this.locale) === null || _c === void 0 ? void 0 : _c.prev_5,\n        next_5: (_d = this.locale) === null || _d === void 0 ? void 0 : _d.next_5\n      }[this.type];\n    }\n  }\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPaginationOptionsComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.nzSize = 'default';\n    this.disabled = false;\n    this.showSizeChanger = false;\n    this.showQuickJumper = false;\n    this.total = 0;\n    this.pageIndex = 1;\n    this.pageSize = 10;\n    this.pageSizeOptions = [];\n    this.pageIndexChange = new EventEmitter();\n    this.pageSizeChange = new EventEmitter();\n    this.listOfPageSizeOption = [];\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-pagination-options');\n  }\n  onPageSizeChange(size) {\n    if (this.pageSize !== size) {\n      this.pageSizeChange.next(size);\n    }\n  }\n  jumpToPageViaInput($event) {\n    const target = $event.target;\n    const index = Math.floor(toNumber(target.value, this.pageIndex));\n    this.pageIndexChange.next(index);\n    target.value = '';\n  }\n  trackByOption(_, option) {\n    return option.value;\n  }\n  ngOnChanges(changes) {\n    const {\n      pageSize,\n      pageSizeOptions,\n      locale\n    } = changes;\n    if (pageSize || pageSizeOptions || locale) {\n      this.listOfPageSizeOption = [...new Set([...this.pageSizeOptions, this.pageSize])].map(item => {\n        return {\n          value: item,\n          label: `${item} ${this.locale.items_per_page}`\n        };\n      });\n    }\n  }\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPaginationSimpleComponent {\n  constructor(cdr, renderer, elementRef, directionality) {\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.itemRender = null;\n    this.disabled = false;\n    this.total = 0;\n    this.pageIndex = 1;\n    this.pageSize = 10;\n    this.pageIndexChange = new EventEmitter();\n    this.lastIndex = 0;\n    this.isFirstIndex = false;\n    this.isLastIndex = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    renderer.removeChild(renderer.parentNode(elementRef.nativeElement), elementRef.nativeElement);\n  }\n  ngOnInit() {\n    var _a;\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.updateRtlStyle();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.updateRtlStyle();\n  }\n  updateRtlStyle() {\n    if (this.dir === 'rtl') {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-pagination-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-pagination-rtl');\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  jumpToPageViaInput($event) {\n    const target = $event.target;\n    const index = toNumber(target.value, this.pageIndex);\n    this.onPageIndexChange(index);\n    target.value = `${this.pageIndex}`;\n  }\n  prePage() {\n    this.onPageIndexChange(this.pageIndex - 1);\n  }\n  nextPage() {\n    this.onPageIndexChange(this.pageIndex + 1);\n  }\n  onPageIndexChange(index) {\n    this.pageIndexChange.next(index);\n  }\n  updateBindingValue() {\n    this.lastIndex = Math.ceil(this.total / this.pageSize);\n    this.isFirstIndex = this.pageIndex === 1;\n    this.isLastIndex = this.pageIndex === this.lastIndex;\n  }\n  ngOnChanges(changes) {\n    const {\n      pageIndex,\n      total,\n      pageSize\n    } = changes;\n    if (pageIndex || total || pageSize) {\n      this.updateBindingValue();\n    }\n  }\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPaginationModule {}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzPaginationComponent, NzPaginationDefaultComponent, NzPaginationItemComponent, NzPaginationModule, NzPaginationOptionsComponent, NzPaginationSimpleComponent };\n//# sourceMappingURL=ng-zorro-antd-pagination.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}