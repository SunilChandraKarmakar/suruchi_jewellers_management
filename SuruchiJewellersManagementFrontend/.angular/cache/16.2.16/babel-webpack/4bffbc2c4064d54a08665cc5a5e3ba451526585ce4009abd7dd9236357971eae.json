{"ast":null,"code":"import { ProductTypeUpateModel } from 'src/app/models/product-type/product-type-update-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product-type.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nexport let ProductTypeUpdateComponent = /*#__PURE__*/(() => {\n  class ProductTypeUpdateComponent {\n    constructor(productTypeService, toastrService, spinnerService, activatedRoute, router) {\n      this.productTypeService = productTypeService;\n      this.toastrService = toastrService;\n      this.spinnerService = spinnerService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      // Product type update model\n      this.productTypeUpdateModel = new ProductTypeUpateModel();\n    }\n    ngOnInit() {\n      // Get product type id by url\n      this.getProductTypeIdByUrl();\n      // Get product type by id\n      this.getProductTypeById();\n    }\n    // Get product type id\n    getProductTypeIdByUrl() {\n      this.activatedRoute.params.subscribe(params => {\n        this._productTypeId = +params[\"recordId\"];\n      });\n    }\n    // Get product type by id\n    getProductTypeById() {\n      this.spinnerService.show();\n      this.productTypeService.getByIdAsync(this._productTypeId).subscribe(result => {\n        this.productTypeUpdateModel = result.response;\n        this.spinnerService.hide();\n      }, error => {\n        this.spinnerService.hide();\n        this.toastrService.error(\"প্রোডাক্ট টাইপ ডাটাবেস থেকে পাওয়া যাচ্ছেনা! আবার চেষ্টা করুণ।\", \"ত্রুটি\");\n      });\n    }\n    // On click product type update\n    onClickProductTypeUpdate() {\n      let isProductTypeFormValidate = this.isProductTypeFormValidate();\n      if (isProductTypeFormValidate) {\n        this.spinnerService.show();\n        this.productTypeService.updateAsync(this.productTypeUpdateModel.id, this.productTypeUpdateModel).subscribe(result => {\n          this.spinnerService.hide();\n          this.toastrService.success(\"প্রোডাক্ট টাইপ এডিট হয়েছে।\", \"সফল\");\n          return this.router.navigate([\"/product-types\"]);\n        }, error => {\n          this.spinnerService.hide();\n          this.toastrService.error(\"প্রোডাক্ট টাইপ এডিট হয়নি! আবার চেষ্টা করুণ।\", \"ত্রুটি\");\n        });\n      }\n    }\n    // Product type form validation\n    isProductTypeFormValidate() {\n      if (this.productTypeUpdateModel.name == undefined || this.productTypeUpdateModel.name == null || this.productTypeUpdateModel.name == \"\") {\n        this.toastrService.warning(\"প্লিজ, নাম দিন।\", \"সতর্কতা\");\n        return false;\n      } else {\n        return true;\n      }\n    }\n    static {\n      this.ɵfac = function ProductTypeUpdateComponent_Factory(t) {\n        return new (t || ProductTypeUpdateComponent)(i0.ɵɵdirectiveInject(i1.ProductTypeService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ProductTypeUpdateComponent,\n        selectors: [[\"app-product-type-update\"]],\n        decls: 26,\n        vars: 3,\n        consts: [[1, \"container\", \"mt-3\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"text-center\"], [1, \"row\", \"justify-content-center\", \"align-content-center\"], [1, \"col-md-8\"], [1, \"card\", \"shadow-sm\"], [1, \"card-body\"], [\"autocomplete\", \"off\", \"autocapitalize\", \"off\", 1, \"row\", \"g-3\"], [\"type\", \"hidden\", \"name\", \"id\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"nz-input\", \"\", \"placeholder\", \"Name\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-footer\"], [\"nz-button\", \"\", \"nzType\", \"primary\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"save\", \"nzTheme\", \"outline\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"routerLink\", \"/product-types\", 2, \"margin-left\", \"3px\"], [\"nz-icon\", \"\", \"nzType\", \"rollback\", \"nzTheme\", \"outline\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#fff\", \"type\", \"ball-spin\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n        template: function ProductTypeUpdateComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n            i0.ɵɵtext(4, \"\\u09AA\\u09CD\\u09B0\\u09CB\\u09A1\\u09BE\\u0995\\u09CD\\u099F \\u099F\\u09BE\\u0987\\u09AA \\u098F\\u09A1\\u09BF\\u099F \\u0995\\u09B0\\u09C1\\u09A3\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(5, \"hr\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"form\", 8)(11, \"input\", 9);\n            i0.ɵɵlistener(\"ngModelChange\", function ProductTypeUpdateComponent_Template_input_ngModelChange_11_listener($event) {\n              return ctx.productTypeUpdateModel.id = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 10);\n            i0.ɵɵtext(14, \"\\u09A8\\u09BE\\u09AE *\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 11);\n            i0.ɵɵlistener(\"ngModelChange\", function ProductTypeUpdateComponent_Template_input_ngModelChange_15_listener($event) {\n              return ctx.productTypeUpdateModel.name = $event;\n            });\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n            i0.ɵɵlistener(\"click\", function ProductTypeUpdateComponent_Template_button_click_17_listener() {\n              return ctx.onClickProductTypeUpdate();\n            });\n            i0.ɵɵelement(18, \"i\", 14);\n            i0.ɵɵtext(19, \" \\u098F\\u09A1\\u09BF\\u099F \\u0995\\u09B0\\u09C1\\u09A3 \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"button\", 15);\n            i0.ɵɵelement(21, \"i\", 16);\n            i0.ɵɵtext(22, \" \\u09AC\\u09BE\\u09A4\\u09BF\\u09B2 \\u0995\\u09B0\\u09C1\\u09A3 \");\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(23, \"ngx-spinner\", 17)(24, \"p\", 18);\n            i0.ɵɵtext(25, \" Loading... \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"ngModel\", ctx.productTypeUpdateModel.id);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.productTypeUpdateModel.name);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"fullScreen\", true);\n          }\n        },\n        dependencies: [i4.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i3.NgxSpinnerComponent]\n      });\n    }\n  }\n  return ProductTypeUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}